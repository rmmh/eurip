#!/usr/bin/env python3
"""
codegen.py outputs embedded datafiles for various languages (...just Go, currently)
"""

import argparse
import struct

def unpack(btr):
	"""Returns the list of shorts for the given datafile."""
	return struct.unpack('<%dH' % (len(btr) // 2), btr)

def emit_go(v4, v6, version):
	data_tmpl = '''package eurip

// Autogenerated data file. Modify codegen.py for changes.
// This file includes GeoLite2 data created by MaxMind, available from
// http://www.maxmind.com.

// The GeoLite2 database version this was generated from (updates monthly).
const Version = "{version}"

var v4Data = []uint16{{
{v4_lines}}}

var v6Data = []uint16{{
{v6_lines}}}
'''

	def to_lines(xs):
		out = ''
		line = ''
		for n in range(0, len(xs), 16):
			out += '\t' + ', '.join(str(x) for x in xs[n:n + 16]) + ',\n'
		return out

	v4_lines = to_lines(unpack(v4))
	v6_lines = to_lines(unpack(v6))

	output = data_tmpl.format(version=version, v4_lines=v4_lines, v6_lines=v6_lines)

	with open('data.go', 'w') as f:
		f.write(output)

def main():
	parser = argparse.ArgumentParser()
	parser.add_argument('--go', action='store_true')
	options = parser.parse_args()

	version = open('version.txt').read().strip()
	v4 = open('euro_v4.btr', 'rb').read()
	v6 = open('euro_v6.btr', 'rb').read()

	if options.go:
		emit_go(v4, v6, version)

if __name__ == '__main__':
	main()
